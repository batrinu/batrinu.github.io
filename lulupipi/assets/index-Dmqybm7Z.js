(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();const f="Au9LWOJrwCz6m3MZdlLxwGr1PRXpM7XGPXWWMrbYSZ3LjiPKDej28s3zp6QmmMiC",u={version:"1.0",elements:{mapElement:{labelVisible:!1},areaPolygon:{fillColor:"#d2b48c"},waterPolygon:{fillColor:"#6baed6"},tollRoad:{strokeColor:"#d8d8d8"},arterialRoad:{strokeColor:"#bcbcbc"},road:{fillColor:"#f7f7f7",strokeColor:"#a5a5a5"},street:{fillColor:"#e1e1e1",strokeColor:"#ffffff"},structure:{fillColor:"#f0e68c",strokeColor:"#ffffff"},vegetation:{fillColor:"#2c7a2c"}},settings:{landColor:"#c5c0b3"}};function m(){return new Promise((e,a)=>{const t=document.createElement("script");t.src=`https://www.bing.com/api/maps/mapcontrol?callback=bingMapsLoaded&key=${f}`,t.async=!0,t.defer=!0,t.onerror=()=>a(new Error("Bing Maps script failed to load.")),document.body.appendChild(t),window.bingMapsLoaded=e})}function g(e,a,t){return new Microsoft.Maps.Map(e,{center:new Microsoft.Maps.Location(a,t),zoom:10,credentials:"Au9LWOJrwCz6m3MZdlLxwGr1PRXpM7XGPXWWMrbYSZ3LjiPKDej28s3zp6QmmMiC",customMapStyle:u})}function h(){return new Promise((e,a)=>{navigator.geolocation.getCurrentPosition(e,a)})}function d(e,a,t){const n=new Microsoft.Maps.Location(a,t),o=new Microsoft.Maps.Pushpin(n,{color:"blue"});e.entities.push(o)}async function y(){return(await(await fetch(`https://overpass-api.de/api/interpreter?data=${encodeURIComponent(`
    [out:json][timeout:25];
    area["ISO3166-1"="RO"]->.searchArea;
    (
      node["amenity"="toilets"](area.searchArea);
    );
    out body;
  `)}`)).json()).elements.map(n=>({lat:n.lat,lon:n.lon,tags:{opening_hours:n.tags.opening_hours,wheelchair:n.tags.wheelchair,baby_change:n.tags.baby_change,"toilets:disposal":n.tags["toilets:disposal"],access:n.tags.access,fee:n.tags.fee}}))}async function w(e,a){const n=`https://api.openweathermap.org/data/2.5/weather?lat=${e}&lon=${a}&appid=1b630c9d106c4e1d3d963bf3e12cde40&units=metric`,o=await fetch(n);if(!o.ok)throw new Error("Weather data could not be retrieved.");const s=await o.json();return{temperature:s.main.temp,weather:s.weather[0].description,icon:s.weather[0].icon}}function b(e){let a="";const t={wheelchair:'<i class="fas fa-wheelchair"></i>',fee:'<i class="fas fa-dollar-sign"></i>',access:'<i class="fas fa-universal-access"></i>',"toilets:disposal":'<i class="fas fa-water"></i>',"toilets:position":'<i class="fas fa-map-marker-alt"></i>',check_date:'<i class="fas fa-calendar-check"></i>',opening_hours:'<i class="fas fa-clock"></i>',baby_change:'<i class="fas fa-baby"></i>'};for(const[n,o]of Object.entries(e))if(o==="yes"||o==="no"||o){const s=t[n]||'<i class="fas fa-tag"></i>',r=n.replace(/_/g," ");a+=`
        <div class="tag">
          ${s} <strong>${r}:</strong> ${o}
        </div>`}return`<div class="dialog-footer">${a}</div>`}async function M(e,a,t){const n=document.getElementById("modal-dialog"),o=n.querySelector(".modal-body");try{const r=await w(a,t),l=`
      <div class="weather-info">
        <img src="https://openweathermap.org/img/wn/${r.icon}@2x.png" alt="${r.weather}" />
        <p><strong>Temperature:</strong> ${r.temperature}Â°C</p>
        <p><strong>Weather:</strong> ${r.weather}</p>
      </div>
    `;e+=l}catch(r){console.error("Failed to fetch weather data:",r),e+="<p>Weather data not available</p>"}const s=`
    <a 
      href="https://www.google.com/maps/dir/?api=1&destination=${a},${t}" 
      target="_blank" 
      class="directions-button">
      Get Directions
    </a>
  `;o.innerHTML=e+s,n.style.display="block"}function p(){const e=document.getElementById("modal-dialog");e.style.display="none"}function L(){document.querySelector(".close-button").addEventListener("click",p),window.addEventListener("click",a=>{const t=document.getElementById("modal-dialog");a.target===t&&p()})}function v(){const e=document.getElementById("loading-overlay");e.style.display="flex"}function C(){const e=document.getElementById("loading-overlay");e.style.display="none"}function i(e,a){const t=document.querySelector(".progress-fill"),n=document.getElementById("loading-status");t.style.width=`${e}%`,n.textContent=a}async function P(e){v(),i(30,"Loading map..."),await new Promise(t=>setTimeout(t,1e3)),i(60,"Loading public restrooms...");const a=await y();i(90,"Placing restroom markers..."),L(),a.forEach(({lat:t,lon:n,tags:o})=>{const s=new Microsoft.Maps.Location(t,n),r=new Microsoft.Maps.Pushpin(s);Microsoft.Maps.Events.addHandler(r,"click",()=>{const l=`
        <h3>Public Restroom</h3>
        ${o?b(o):"<p>No additional information available</p>"}
      `;M(l,t,n)}),e.entities.push(r)}),i(100,"Complete!"),setTimeout(C,500)}async function E(e){await P(e)}const c={latitude:44.4268,longitude:26.1025},$=document.getElementById("map");async function k(){try{await m();const e=g($,c.latitude,c.longitude);try{const a=await h(),{latitude:t,longitude:n}=a.coords;e.setView({center:new Microsoft.Maps.Location(t,n),zoom:12}),d(e,t,n)}catch{console.log("Geolocation not available. Using default location."),d(e,c.latitude,c.longitude)}await E(e)}catch(e){console.error("Error loading map:",e)}}k();
